{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css"],"names":["module","exports","Filter","initialValue","onFilterChange","className","st","wrapper","label","input","type","name","value","onChange","event","target","ContactList","contacts","onDelBtnClick","map","contact","listItem","namber","number","btn","id","onClick","uuidv4","validationSchema","yup","required","length","ContactForm","state","initialValues","onSubmit","resetForm","setSubmitting","props","form","autoComplete","error","Component","App","filter","submitHandler","contactObj","some","alert","setState","prevState","changeFilterHandler","contactDeleteHandler","contactListFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","this","prevProps","setItem","stringify","filteredContactList","title","subtitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5475ae99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ga_Yp\",\"label\":\"ContactForm_label__2g347\",\"input\":\"ContactForm_input__FQ87O\",\"btn\":\"ContactForm_btn__uKWwk\",\"error\":\"ContactForm_error__WGp1W\"};","import PropTypes from 'prop-types';\r\nimport st from './Filter.module.css';\r\n\r\nconst Filter = ({ initialValue = '', onFilterChange }) => {\r\n  return (\r\n    <div className={st.wrapper}>\r\n      <label className={st.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={initialValue}\r\n          onChange={event => {\r\n            onFilterChange(event.target.value);\r\n          }}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = PropTypes.shape({\r\n  initialValue: PropTypes.string,\r\n  onFilterChange: PropTypes.func,\r\n}).isRequired;\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport st from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDelBtnClick }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id} className={st.listItem}>\r\n          <span className={st.name}>{contact.name}:</span>\r\n          <span className={st.namber}>{contact.number}</span>\r\n          <button\r\n            className={st.btn}\r\n            type=\"button\"\r\n            id={contact.id}\r\n            onClick={event => onDelBtnClick(event.target.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = PropTypes.shape({\r\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n  onDelBtnClick: PropTypes.func.isRequired,\r\n}).isRequired;\r\n\r\nexport default ContactList;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as yup from 'yup';\r\nimport st from './ContactForm.module.css';\r\n\r\nuuidv4();\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(\"Enter contact's name\"),\r\n  number: yup\r\n    .string()\r\n    .length(10, 'Example: 0969175934')\r\n    .required('Enter phone number'),\r\n});\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = { name: '', number: '' };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Formik\r\n          initialValues={{ name: '', number: '' }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={({ name, number }, { resetForm, setSubmitting }) => {\r\n            this.props.onSubmit({ name, number, id: uuidv4() });\r\n            setSubmitting(false);\r\n            resetForm();\r\n          }}\r\n        >\r\n          <Form className={st.form} autoComplete=\"off\">\r\n            <label className={st.label}>\r\n              Name:\r\n              <span className={st.error}>\r\n                <ErrorMessage name=\"name\" />\r\n              </span>\r\n              <Field type=\"text\" name=\"name\" className={st.input} />\r\n            </label>\r\n            <label className={st.label}>\r\n              Number:\r\n              <span className={st.error}>\r\n                <ErrorMessage name=\"number\" />\r\n              </span>\r\n              <Field type=\"tel\" name=\"number\" className={st.input} />\r\n            </label>\r\n            <button type=\"submit\" className={st.btn}>\r\n              Add contact\r\n            </button>\r\n          </Form>\r\n        </Formik>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\n\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport st from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  submitHandler = contactObj => {\n    if (this.state.contacts.some(({ name }) => name === contactObj.name)) {\n      return alert(`${contactObj.name} is already in contacts.`);\n    }\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contactObj],\n      };\n    });\n  };\n\n  changeFilterHandler = filter => {\n    this.setState({ filter });\n  };\n\n  contactDeleteHandler = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  contactListFilter = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContactList = this.contactListFilter();\n    return (\n      <div className={st.wrapper}>\n        <h1 className={st.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.submitHandler} />\n        <h2 className={st.subtitle}>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter\n            initialValue={filter}\n            onFilterChange={this.changeFilterHandler}\n          />\n        )}\n        {filteredContactList.length > 0 && (\n          <ContactList\n            contacts={filteredContactList}\n            onDelBtnClick={this.contactDeleteHandler}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__3RDNB\",\"name\":\"ContactList_name__1HDzu\",\"namber\":\"ContactList_namber__MnvN6\",\"btn\":\"ContactList_btn__1G7k2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__3kNFE\",\"label\":\"Filter_label__lk96Y\",\"input\":\"Filter_input__17XiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__DOqox\",\"title\":\"App_title__46b2S\",\"subtitle\":\"App_subtitle__2fOSB\"};"],"sourceRoot":""}